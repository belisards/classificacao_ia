[
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "Inteligência artificial com código aberto para jornalistas",
    "section": "",
    "text": "Guia em construção, inicialmente dedicado à tarefa de classificação de textos e imagens.\nInspirado no repositório Inteligência com fontes abertas (OSINT) para jornalistas.\n\n\n\n\nSlides na ABRAJI - 2025\n\n\n\n\nVisualização de tokens em diferentes modelos\nVisualização de embeddings\nTutorial do Google sobre métricas de classificação\n\n\n\n\n\nOllama: permite rodar modelos de IA localmente.\nArgilla: ferramenta para anotação de dados, que permite a colaboração entre várias pessoas de uma organização e que pode integrar modelos de IA para auxiliar no processo.\nSmart Image Sorter: ferramenta para classificação de imagens com modelos de IA.\n\n\n\n\n\n\n\n\n\n\n\n3Blue1Brown: playlists sobre fundamentos de redes neurais e modelos Transformer\nPractical AI for Investigative Journalism: playlist de vídeo tutoriais sobre LLMs e outras ferramentas de IA.\nArgilla ferramenta para anotação colaborativa de documentos.\nModernBERT: boa explicação sobre a relevância de modelos BERT atualmente.\n\n🖥️ github.com/belisards/abraji25"
  },
  {
    "objectID": "readme.html#classificação-de-texto-e-imagens",
    "href": "readme.html#classificação-de-texto-e-imagens",
    "title": "Inteligência artificial com código aberto para jornalistas",
    "section": "",
    "text": "Slides na ABRAJI - 2025\n\n\n\n\nVisualização de tokens em diferentes modelos\nVisualização de embeddings\nTutorial do Google sobre métricas de classificação\n\n\n\n\n\nOllama: permite rodar modelos de IA localmente.\nArgilla: ferramenta para anotação de dados, que permite a colaboração entre várias pessoas de uma organização e que pode integrar modelos de IA para auxiliar no processo.\nSmart Image Sorter: ferramenta para classificação de imagens com modelos de IA.\n\n\n\n\n\n\n\n\n\n\n\n3Blue1Brown: playlists sobre fundamentos de redes neurais e modelos Transformer\nPractical AI for Investigative Journalism: playlist de vídeo tutoriais sobre LLMs e outras ferramentas de IA.\nArgilla ferramenta para anotação colaborativa de documentos.\nModernBERT: boa explicação sobre a relevância de modelos BERT atualmente.\n\n🖥️ github.com/belisards/abraji25"
  },
  {
    "objectID": "notebooks/zero_shot.html",
    "href": "notebooks/zero_shot.html",
    "title": "Exemplo copia e cola",
    "section": "",
    "text": "from transformers import pipeline\nclassifier = pipeline(\"zero-shot-classification\", model=\"MoritzLaurer/mDeBERTa-v3-base-mnli-xnli\")\nsequence_to_classify = \"Angela Merkel ist eine Politikerin in Deutschland und Vorsitzende der CDU\"\ncandidate_labels = [\"politics\", \"economy\", \"entertainment\", \"environment\"]\noutput = classifier(sequence_to_classify, candidate_labels, multi_label=False)\nprint(output)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDevice set to use cuda:0\n\n\n{'sequence': 'Angela Merkel ist eine Politikerin in Deutschland und Vorsitzende der CDU', 'labels': ['politics', 'economy', 'environment', 'entertainment'], 'scores': [0.9656293392181396, 0.023067045956850052, 0.00737267080694437, 0.003930921200662851]}\n\n\n\nAdaptando o exemplo\n\n!pip install -Uq datasets\n\n\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/494.8 kB ? eta -:--:--\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 494.8/494.8 kB 21.1 MB/s eta 0:00:00\n\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/193.6 kB ? eta -:--:--\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 193.6/193.6 kB 16.0 MB/s eta 0:00:00\n\nERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n\ntorch 2.6.0+cu124 requires nvidia-cublas-cu12==12.4.5.8; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cublas-cu12 12.5.3.2 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cuda-cupti-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-cupti-cu12 12.5.82 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cuda-nvrtc-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-nvrtc-cu12 12.5.82 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cuda-runtime-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cuda-runtime-cu12 12.5.82 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cudnn-cu12==9.1.0.70; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cudnn-cu12 9.3.0.75 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cufft-cu12==11.2.1.3; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cufft-cu12 11.2.3.61 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-curand-cu12==10.3.5.147; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-curand-cu12 10.3.6.82 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cusolver-cu12==11.6.1.9; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cusolver-cu12 11.6.3.83 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-cusparse-cu12==12.3.1.170; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-cusparse-cu12 12.5.1.3 which is incompatible.\n\ntorch 2.6.0+cu124 requires nvidia-nvjitlink-cu12==12.4.127; platform_system == \"Linux\" and platform_machine == \"x86_64\", but you have nvidia-nvjitlink-cu12 12.5.82 which is incompatible.\n\ngcsfs 2025.3.2 requires fsspec==2025.3.2, but you have fsspec 2025.3.0 which is incompatible.\n\n\n\n\n\n\nfrom datasets import load_dataset\ndataset = load_dataset(\"celsowm/bbc_news_ptbr\")\n\n\n\n\n\n\n\n\n\n\n\ndataset\n\nDatasetDict({\n    train: Dataset({\n        features: ['categoria', 'titulo', 'texto', 'data', 'link'],\n        num_rows: 8637\n    })\n})\n\n\n\ndf = dataset['train'].to_pandas()\n\ndf\n\n\n    \n\n\n\n\n\n\ncategoria\ntitulo\ntexto\ndata\nlink\n\n\n\n\n0\nbrasil\nQuem foi Oswaldo Aranha, o brasileiro que ajud...\n“Sua atuação no cenário internacional estava d...\n2023-11-04\nhttps://www.bbc.com/portuguese/articles/c0wxwr...\n\n\n1\nbrasil\nComo PCC fez Paraguai virar um dos países com ...\nNo ranking de 2023, a nação saltou para a 4ª p...\n2023-11-04\nhttps://www.bbc.com/portuguese/articles/cp646z...\n\n\n2\nbrasil\nVídeo, Massa ou Milei: o que Brasil tem a ganh...\nO segundo turno das eleições presidenciais na ...\n2023-11-02\nhttps://www.bbc.com/portuguese/articles/ckv0gk...\n\n\n3\nbrasil\nDia de Finados: como celebração dos mortos, qu...\n\"Do Senhor é a terra e a sua plenitude, o mund...\n2023-11-02\nhttps://www.bbc.com/portuguese/articles/c1354g...\n\n\n4\nbrasil\nA estratégia do Brasil por resolução sobre Isr...\nApós quatro propostas terem sido rejeitadas na...\n2023-10-31\nhttps://www.bbc.com/portuguese/articles/clw7wl...\n\n\n...\n...\n...\n...\n...\n...\n\n\n8632\nsociedade\nO impacto sobre ciclistas mulheres dos assédio...\nUma ciclista que viralizou após confrontar um ...\n2021-06-13\nhttps://www.bbc.com/portuguese/internacional-5...\n\n\n8633\nsociedade\nBritânica conta como deu soco em crocodilo par...\nComo todas as histórias de terror, a de Georgi...\n2021-06-11\nhttps://www.bbc.com/portuguese/internacional-5...\n\n\n8634\nsociedade\nA cidade asiática obcecada com a limpeza\nSinto isso toda vez que saio do avião: o frio ...\n2021-06-10\nhttps://www.bbc.com/portuguese/vert-tra-56995398\n\n\n8635\nsociedade\nVídeo, Os mistérios da vida, morte e aparência...\nEternizada no imaginário popular com a pele br...\n2021-06-10\nhttps://www.bbc.com/portuguese/geral-57427857\n\n\n8636\nsociedade\nMulher que esperava óctuplos anuncia ter dado ...\nUma mulher sul-africana deu à luz 10 bebês, no...\n2021-06-10\nhttps://www.bbc.com/portuguese/internacional-5...\n\n\n\n\n8637 rows × 5 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf.categoria.value_counts()\n\n\n\n\n\n\n\n\ncount\n\n\ncategoria\n\n\n\n\n\nbrasil\n960\n\n\ninternacional\n960\n\n\neconomia\n960\n\n\nsaude\n960\n\n\nciencia\n960\n\n\ntecnologia\n960\n\n\namerica_latina\n959\n\n\ncultura\n959\n\n\nsociedade\n959\n\n\n\n\ndtype: int64\n\n\n\n\n\ncategorias = df.categoria.unique()\n\ndef classifica_texto(texto,categorias=categorias):\n  resultado = classifier(texto,categorias)\n  resultados_ordenados = sorted(zip(resultado['labels'], resultado['scores']), key=lambda x: x[1], reverse=True)\n  return resultados_ordenados[0][0]\n\nclassifica_texto(\"Os empregos caíram no último trimestre\")\n\n'economia'\n\n\n\nfrom datasets import Dataset\namostra = Dataset.from_pandas(df.sample(100))\n\ndef classifica_texto(texto):\n  resultado = classifier(texto['titulo'], categorias)\n  resultados_ordenados = sorted(zip(resultado['labels'], resultado['scores']), key=lambda x: x[1], reverse=True)\n  texto['predicted_category'] = resultados_ordenados[0][0]\n  return texto\n\namostra = amostra.map(classifica_texto)\n\n\n\n\n\n\namostra.to_pandas().head()\n\n\n\n    \n\n\n\n\n\n\ncategoria\ntitulo\ntexto\ndata\nlink\n__index_level_0__\npredicted_category\n\n\n\n\n0\nbrasil\nA briga entre Pacheco e Lira que pode paralisa...\nUma disputa de poder entre o Senado Federal e ...\n2023-03-24\nhttps://www.bbc.com/portuguese/articles/c03k0l...\n430\nbrasil\n\n\n1\neconomia\nPolícias desobstruem estradas tomadas por bols...\nPolícias militares dos Estados começaram a des...\n2022-11-01\nhttps://www.bbc.com/portuguese/brasil-63466820\n3325\nsociedade\n\n\n2\ncultura\nRound 6: seis coisas que a série da Netflix no...\nRound 6, um drama sul-coreano sangrento, se to...\n2021-10-18\nhttps://www.bbc.com/portuguese/geral-58952413\n7282\ninternacional\n\n\n3\nsaude\nPor que ter alergias pode reduzir risco de con...\nNo decorrer da pandemia de covid-19, descobrim...\n2022-08-26\nhttps://www.bbc.com/portuguese/geral-62672508\n4631\nsaude\n\n\n4\namerica_latina\nTratados como indesejáveis pela Colômbia, 'hip...\nA Ministra do Meio Ambiente, Susana Muhamad, a...\n2023-11-03\nhttps://www.bbc.com/portuguese/articles/c5173p...\n962\nsociedade\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\namostra\n\nDataset({\n    features: ['categoria', 'titulo', 'texto', 'data', 'link', '__index_level_0__', 'predicted_category'],\n    num_rows: 100\n})\n\n\n\nfrom sklearn.metrics import classification_report\n\n# Get the true labels and predicted labels\ny_true = amostra['categoria']\ny_pred = amostra['predicted_category']\n\n# Generate and print the classification report\nreport = classification_report(y_true, y_pred)\nprint(report)\n\n                precision    recall  f1-score   support\n\namerica_latina       0.38      0.25      0.30        12\n        brasil       0.29      0.20      0.24        10\n       ciencia       0.00      0.00      0.00         7\n       cultura       0.40      0.33      0.36        12\n      economia       0.60      0.27      0.38        11\n internacional       0.27      0.44      0.33        16\n         saude       0.44      0.50      0.47        14\n     sociedade       0.06      0.10      0.07        10\n    tecnologia       0.38      0.38      0.38         8\n\n      accuracy                           0.30       100\n     macro avg       0.31      0.27      0.28       100\n  weighted avg       0.33      0.30      0.30       100"
  },
  {
    "objectID": "notebooks/llm_api.html",
    "href": "notebooks/llm_api.html",
    "title": "Consultando uma LLM",
    "section": "",
    "text": "import llm, os, dotenv\n\ndotenv.load_dotenv()\n\nmistral_token = os.getenv(\"MISTRAL\")\n# mistral_token = &lt;INSIRA SUA CHAVE AQUI&gt;\n\nmodelo = llm.get_model(\"mistral-medium\")\n\nresposta = modelo.prompt(\n    \"\"\"\n    Classifique o texto abaixo. Responda apenas com a classe, sem explicações.\n\n    Texto: O Botafogo ganhou do PSG no Mundial.\n\n    Classes: Política, Esportes, Economia, Outros.\n    \"\"\",\n    key=mistral_token\n)\n\nprint(resposta)\n\nEsportes\n\n\n\nClassificando um dataset\n\nfrom datasets import load_dataset\n\ndataset = load_dataset(\"celsowm/bbc_news_ptbr\")\n\n/home/abitporu/Documents/abraji/.venv/lib/python3.10/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n\n\n\ndf = dataset['train'].to_pandas()\ndf.head()\n\n\n\n\n\n\n\n\ncategoria\ntitulo\ntexto\ndata\nlink\n\n\n\n\n0\nbrasil\nQuem foi Oswaldo Aranha, o brasileiro que ajud...\n“Sua atuação no cenário internacional estava d...\n2023-11-04\nhttps://www.bbc.com/portuguese/articles/c0wxwr...\n\n\n1\nbrasil\nComo PCC fez Paraguai virar um dos países com ...\nNo ranking de 2023, a nação saltou para a 4ª p...\n2023-11-04\nhttps://www.bbc.com/portuguese/articles/cp646z...\n\n\n2\nbrasil\nVídeo, Massa ou Milei: o que Brasil tem a ganh...\nO segundo turno das eleições presidenciais na ...\n2023-11-02\nhttps://www.bbc.com/portuguese/articles/ckv0gk...\n\n\n3\nbrasil\nDia de Finados: como celebração dos mortos, qu...\n\"Do Senhor é a terra e a sua plenitude, o mund...\n2023-11-02\nhttps://www.bbc.com/portuguese/articles/c1354g...\n\n\n4\nbrasil\nA estratégia do Brasil por resolução sobre Isr...\nApós quatro propostas terem sido rejeitadas na...\n2023-10-31\nhttps://www.bbc.com/portuguese/articles/clw7wl...\n\n\n\n\n\n\n\n\ndf.categoria.value_counts()\n\ncategoria\nbrasil            960\ninternacional     960\neconomia          960\nsaude             960\nciencia           960\ntecnologia        960\namerica_latina    959\ncultura           959\nsociedade         959\nName: count, dtype: int64\n\n\n\nclasses = df.categoria.unique().tolist()\namostra = df.sample(n=20,random_state=42)\n\n\ndef classificar_texto(model, texto, classes):\n    prompt = f\"\"\"\n    Classifique o texto abaixo. Responda apenas com a classe, sem explicações.\n\n    Texto: {texto}\n\n    Classes: {classes}\n    \"\"\"\n    \n    resposta = str(model.prompt(prompt))   \n    \n    return resposta\n\nclassificar_texto(modelo, \"O turismo no Chile cresceu\", classes)\n\n\n---------------------------------------------------------------------------\nModelError                                Traceback (most recent call last)\nCell In[6], line 14\n     10     resposta = str(model.prompt(prompt))   \n     12     return resposta\n---&gt; 14 classificar_texto(modelo, \"O turismo no Chile cresceu\", classes)\n\nCell In[6], line 10, in classificar_texto(model, texto, classes)\n      1 def classificar_texto(model, texto, classes):\n      2     prompt = f\"\"\"\n      3     Classifique o texto abaixo. Responda apenas com a classe, sem explicações.\n      4 \n   (...)\n      7     Classes: {classes}\n      8     \"\"\"\n---&gt; 10     resposta = str(model.prompt(prompt))   \n     12     return resposta\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:910, in Response.__str__(self)\n    909 def __str__(self) -&gt; str:\n--&gt; 910     return self.text()\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:917, in Response.text(self)\n    916 def text(self) -&gt; str:\n--&gt; 917     self._force()\n    918     return \"\".join(self._chunks)\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:914, in Response._force(self)\n    912 def _force(self):\n    913     if not self._done:\n--&gt; 914         list(self)\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:1033, in Response.__iter__(self)\n   1031         self._chunks.append(chunk)\n   1032 elif isinstance(self.model, KeyModel):\n-&gt; 1033     for chunk in self.model.execute(\n   1034         self.prompt,\n   1035         stream=self.stream,\n   1036         response=self,\n   1037         conversation=self.conversation,\n   1038         key=self.model.get_key(self._key),\n   1039     ):\n   1040         assert chunk is not None\n   1041         yield chunk\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm_mistral.py:484, in Mistral.execute(self, prompt, stream, response, conversation, key)\n    482     words = [word[:30] for word in words]\n    483     message = \" \".join(words)\n--&gt; 484     raise llm.ModelError(\n    485         f\"{event_source.response.status_code}: {type} - {message}\"\n    486     )\n    487 usage = None\n    488 event_source.response.raise_for_status()\n\nModelError: 429: service_tier_capacity_exceeded - Service tier capacity exceeded for this model.\n\n\n\n\nfrom tqdm import tqdm\ntqdm.pandas()\n\namostra['categoria_pred'] = amostra['categoria'].progress_apply(lambda x: classificar_texto(modelo, x, classes))\n\n100%|██████████| 20/20 [00:16&lt;00:00,  1.23it/s]\n\n\n\namostra\n\n\n\n\n\n\n\n\ncategoria\ntitulo\ntexto\ndata\nlink\ncategoria_pred\n\n\n\n\n1313\namerica_latina\n5 sinais de recuperação — com limites — da eco...\n\"Venezuela foi consertada\" é uma frase que cir...\n2022-06-21\nhttps://www.bbc.com/portuguese/internacional-6...\namerica_latina\n\n\n7867\nsociedade\n'Meus pais iam me matar para limpar a honra da...\nQuando Manoj — que foi registrado como sendo d...\n2023-07-28\nhttps://www.bbc.com/portuguese/articles/c25gpy...\nsociedade\n\n\n4595\nsaude\nVacina contra varíola dos macacos chega neste ...\nO Ministério da Saúde anunciou que as primeira...\n2022-09-19\nhttps://www.bbc.com/portuguese/brasil-62317822\nsaude\n\n\n1046\namerica_latina\nO papel dos cartéis mexicanos na onda de violê...\n\"Aqui pagamos com a vida pela democracia.\" Seu...\n2023-08-10\nhttps://www.bbc.com/portuguese/articles/cglyke...\namerica_latina\n\n\n3142\neconomia\nComo crise do Credit Suisse manchou reputação ...\nSegundo maior banco suíço e uma das 30 institu...\n2023-03-21\nhttps://www.bbc.com/portuguese/articles/crg02l...\neconomia\n\n\n1672\namerica_latina\nComo a Lei de Cotas incentivou a migração de a...\nCriada em 2012 e prestes a passar por processo...\n2020-12-29\nhttps://www.bbc.com/portuguese/brasil-55225891\namerica_latina\n\n\n6525\ntecnologia\n'Deus invisível': quem é o hacker acusado de r...\nSó se sabia de três coisas sobre ele: 1) Fxmsp...\n2020-07-31\nhttps://www.bbc.com/portuguese/internacional-5...\ntecnologia\n\n\n5148\nciencia\nPor que Nova York está afundando\nO solo sob a cidade de Nova York está afundand...\n2023-05-25\nhttps://www.bbc.com/portuguese/articles/cq53nd...\nciencia\n\n\n1905\namerica_latina\n'Amazônia é como a bolsa de valores: dependend...\nPara o procurador Daniel Azeredo, do Ministéri...\n2020-10-09\nhttps://www.bbc.com/portuguese/brasil-54459038\namerica_latina\n\n\n6959\ncultura\nOscar 2023: a polêmica que pode desclassificar...\nA indicação inesperada ao Oscar da atriz britâ...\n2023-01-30\nhttps://www.bbc.com/portuguese/geral-64460473\ncultura\n\n\n7923\nsociedade\nPor que 101 pessoas e uma cadela disputam o ca...\nToronto decidirá nesta segunda-feira (26/6) qu...\n2023-06-26\nhttps://www.bbc.com/portuguese/articles/c14xvv...\nsociedade\n\n\n3320\neconomia\nComo funciona o bilionário negócio de compra e...\nQuase US$ 2 bilhões foram gastos em terrenos v...\n2022-11-04\nhttps://www.bbc.com/portuguese/geral-63514882\neconomia\n\n\n8207\nsociedade\n'Homem mais sujo do mundo' morre aos 94 anos a...\nUm eremita que ficou conhecido pela imprensa c...\n2022-10-26\nhttps://www.bbc.com/portuguese/geral-63387422\nsociedade\n\n\n5973\ntecnologia\nBoate Kiss: 'Famílias não querem exploração co...\nA advogada de 42 famílias de vítimas e sobrevi...\n2023-02-03\nhttps://www.bbc.com/portuguese/brasil-64452695\ntecnologia\n\n\n700\nbrasil\nSenadores dos EUA correm para nomear embaixado...\nNa mesma semana em que o presidente americano,...\n2022-12-07\nhttps://www.bbc.com/portuguese/geral-63891834\nbrasil\n\n\n5294\nciencia\n'Mais da metade da população mundial pode esta...\nMais da metade da população mundial será class...\n2023-03-03\nhttps://www.bbc.com/portuguese/articles/cg6xw6...\nciencia\n\n\n2623\ninternacional\nPesquisadores buscam vestígios de um dos últim...\nNo final de 1852, dois anos depois de ser publ...\n2023-07-26\nhttps://www.bbc.com/portuguese/articles/cndkrk...\ninternacional\n\n\n2201\ninternacional\nMotorista e entregador: onde trabalhadores de ...\nMotoristas e entregadores devem ter um piso de...\n2023-10-02\nhttps://www.bbc.com/portuguese/articles/crg0pr...\ninternacional\n\n\n2485\ninternacional\nSurras, choques elétricos e fome: os prisionei...\nAtenção: esta reportagem contém detalhes que p...\n2023-08-20\nhttps://www.bbc.com/portuguese/articles/c51jkd...\ninternacional\n\n\n7961\nsociedade\nO escândalo sexual que derrubou apresentador d...\nUm escândalo sexual derrubou um dos principais...\n2023-05-29\nhttps://www.bbc.com/portuguese/articles/c72j4g...\nsociedade\n\n\n\n\n\n\n\n\n# classifcation report\nfrom sklearn.metrics import classification_report\n\nprint(classification_report(amostra.categoria, amostra.categoria_pred))\n\n                precision    recall  f1-score   support\n\namerica_latina       1.00      1.00      1.00         4\n        brasil       1.00      1.00      1.00         1\n       ciencia       1.00      1.00      1.00         2\n       cultura       1.00      1.00      1.00         1\n      economia       1.00      1.00      1.00         2\n internacional       1.00      1.00      1.00         3\n         saude       1.00      1.00      1.00         1\n     sociedade       1.00      1.00      1.00         4\n    tecnologia       1.00      1.00      1.00         2\n\n      accuracy                           1.00        20\n     macro avg       1.00      1.00      1.00        20\n  weighted avg       1.00      1.00      1.00        20\n\n\n\n\n\nClassificando um dataset mais complicado\n\ndef classificar_pl(model, texto):\n    prompt = f\"\"\"\n    Classifique se o PL é favorável ou contrário ao direito das mulheres. Responda apenas com 1 ou 0, sem explicações, de acordo com as definições:\n\n    1: significa que o PL é desfavorável ao direito das mulheres.\n    0: significa que o PL é favorável ao direito das mulheres.  \n\n    ---\n\n    Texto: {texto}\n\n    Classes: 1, 0\n    \"\"\"\n    \n    resposta = str(model.prompt(prompt))   \n    \n    return resposta\n\nclassificar_pl(modelo,\"Acabar com a Lei Maria da Penha\")\n\n'1'\n\n\n\nclassificar_pl(modelo,\"Apoiar vítimas de violência doméstica\")\n\n'0'\n\n\n\nementas = load_dataset(\"azmina/ementas_anotadas_inteiroteor\")\n\nementas_test = ementas['test'].to_pandas()\n\n\nementas_test.head()\n\n\n\n\n\n\n\n\nid\ntext\nlabel_tema\nlabel_desfavoravel\nproponente_mulher\npartido\nurlInteiroTeor\ntextoInteiroTeor\n\n\n\n\n0\nPL 4546/2023\nProíbe o ensino de determinados conteúdos rela...\ngenero\n1\nM\nMDB\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\nPROJETO DE LEI Nº , DE 2023\\n(DO SR. OLIV...\n\n\n1\nPDL 92/2023\nSusta os efeitos da Portaria nº 665, de 23 dem...\ngenero\n1\nM\nREPUBLICANOS\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\nCÂMARA DOS DEPUTADOS\\nGabinete do Deputado Mes...\n\n\n2\nPL 2092/2021\nAltera a Lei nº 8.080, de 19 de setembro de 19...\ndireitos sexuais e reprodutivos\n0\nM\nPP\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\n\\nPROJETO DE LEI Nº , DE 20 21 \\n(Do Sr. ...\n\n\n3\nPL 2736/2023\nEstabelece a obrigatoriedade de submissão à mo...\nviolencia contra a mulher\n1\nM\nPP\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\nCÂMARA DOS DEPUTADOS \\nGabinete do Deputado L...\n\n\n4\nPL 741/2021\nAltera o Decreto-Lei nº 2.848, de 7 de dezembr...\nviolencia contra a mulher\n0\nF\nPROS\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\nPROJETO DE LEI Nº 2021\\n(Das Sras. Marga...\n\n\n\n\n\n\n\n\namostra_ementas = ementas_test.sample(20,random_state=222)\n\n\namostra_ementas['label_pred'] = amostra_ementas['text'].progress_apply(lambda x: classificar_pl(modelo,x))\n\n 51%|█████     | 51/100 [00:54&lt;00:52,  1.07s/it]\n\n\n\n---------------------------------------------------------------------------\nModelError                                Traceback (most recent call last)\nCell In[14], line 4\n      1 amostra_ementas = ementas_test.sample(100,random_state=222)\n----&gt; 4 amostra_ementas['label_pred'] = amostra_ementas['text'].progress_apply(lambda x: classificar_pl(modelo,x))\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/tqdm/std.py:917, in tqdm.pandas.&lt;locals&gt;.inner_generator.&lt;locals&gt;.inner(df, func, *args, **kwargs)\n    914 # Apply the provided function (in **kwargs)\n    915 # on the df using our wrapper (which provides bar updating)\n    916 try:\n--&gt; 917     return getattr(df, df_function)(wrapper, **kwargs)\n    918 finally:\n    919     t.close()\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/pandas/core/series.py:4935, in Series.apply(self, func, convert_dtype, args, by_row, **kwargs)\n   4800 def apply(\n   4801     self,\n   4802     func: AggFuncType,\n   (...)\n   4807     **kwargs,\n   4808 ) -&gt; DataFrame | Series:\n   4809     \"\"\"\n   4810     Invoke function on values of Series.\n   4811 \n   (...)\n   4926     dtype: float64\n   4927     \"\"\"\n   4928     return SeriesApply(\n   4929         self,\n   4930         func,\n   4931         convert_dtype=convert_dtype,\n   4932         by_row=by_row,\n   4933         args=args,\n   4934         kwargs=kwargs,\n-&gt; 4935     ).apply()\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/pandas/core/apply.py:1422, in SeriesApply.apply(self)\n   1419     return self.apply_compat()\n   1421 # self.func is Callable\n-&gt; 1422 return self.apply_standard()\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/pandas/core/apply.py:1502, in SeriesApply.apply_standard(self)\n   1496 # row-wise access\n   1497 # apply doesn't have a `na_action` keyword and for backward compat reasons\n   1498 # we need to give `na_action=\"ignore\"` for categorical data.\n   1499 # TODO: remove the `na_action=\"ignore\"` when that default has been changed in\n   1500 #  Categorical (GH51645).\n   1501 action = \"ignore\" if isinstance(obj.dtype, CategoricalDtype) else None\n-&gt; 1502 mapped = obj._map_values(\n   1503     mapper=curried, na_action=action, convert=self.convert_dtype\n   1504 )\n   1506 if len(mapped) and isinstance(mapped[0], ABCSeries):\n   1507     # GH#43986 Need to do list(mapped) in order to get treated as nested\n   1508     #  See also GH#25959 regarding EA support\n   1509     return obj._constructor_expanddim(list(mapped), index=obj.index)\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/pandas/core/base.py:925, in IndexOpsMixin._map_values(self, mapper, na_action, convert)\n    922 if isinstance(arr, ExtensionArray):\n    923     return arr.map(mapper, na_action=na_action)\n--&gt; 925 return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/pandas/core/algorithms.py:1743, in map_array(arr, mapper, na_action, convert)\n   1741 values = arr.astype(object, copy=False)\n   1742 if na_action is None:\n-&gt; 1743     return lib.map_infer(values, mapper, convert=convert)\n   1744 else:\n   1745     return lib.map_infer_mask(\n   1746         values, mapper, mask=isna(values).view(np.uint8), convert=convert\n   1747     )\n\nFile pandas/_libs/lib.pyx:2999, in pandas._libs.lib.map_infer()\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/tqdm/std.py:912, in tqdm.pandas.&lt;locals&gt;.inner_generator.&lt;locals&gt;.inner.&lt;locals&gt;.wrapper(*args, **kwargs)\n    906 def wrapper(*args, **kwargs):\n    907     # update tbar correctly\n    908     # it seems `pandas apply` calls `func` twice\n    909     # on the first column/row to decide whether it can\n    910     # take a fast or slow code path; so stop when t.total==t.n\n    911     t.update(n=1 if not t.total or t.n &lt; t.total else 0)\n--&gt; 912     return func(*args, **kwargs)\n\nCell In[14], line 4, in &lt;lambda&gt;(x)\n      1 amostra_ementas = ementas_test.sample(100,random_state=222)\n----&gt; 4 amostra_ementas['label_pred'] = amostra_ementas['text'].progress_apply(lambda x: classificar_pl(modelo,x))\n\nCell In[10], line 15, in classificar_pl(model, texto)\n      1 def classificar_pl(model, texto):\n      2     prompt = f\"\"\"\n      3     Classifique se o PL é favorável ou contrário ao direito das mulheres. Responda apenas com 1 ou 0, sem explicações, de acordo com as definições:\n      4 \n   (...)\n     12     Classes: 1, 0\n     13     \"\"\"\n---&gt; 15     resposta = str(model.prompt(prompt))   \n     17     return resposta\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:910, in Response.__str__(self)\n    909 def __str__(self) -&gt; str:\n--&gt; 910     return self.text()\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:917, in Response.text(self)\n    916 def text(self) -&gt; str:\n--&gt; 917     self._force()\n    918     return \"\".join(self._chunks)\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:914, in Response._force(self)\n    912 def _force(self):\n    913     if not self._done:\n--&gt; 914         list(self)\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm/models.py:1033, in Response.__iter__(self)\n   1031         self._chunks.append(chunk)\n   1032 elif isinstance(self.model, KeyModel):\n-&gt; 1033     for chunk in self.model.execute(\n   1034         self.prompt,\n   1035         stream=self.stream,\n   1036         response=self,\n   1037         conversation=self.conversation,\n   1038         key=self.model.get_key(self._key),\n   1039     ):\n   1040         assert chunk is not None\n   1041         yield chunk\n\nFile ~/Documents/abraji/.venv/lib/python3.10/site-packages/llm_mistral.py:484, in Mistral.execute(self, prompt, stream, response, conversation, key)\n    482     words = [word[:30] for word in words]\n    483     message = \" \".join(words)\n--&gt; 484     raise llm.ModelError(\n    485         f\"{event_source.response.status_code}: {type} - {message}\"\n    486     )\n    487 usage = None\n    488 event_source.response.raise_for_status()\n\nModelError: 429: invalid_request_error - Service tier capacity exceeded for this model.\n\n\n\n\nprint(classification_report(amostra_ementas['label_desfavoravel'].astype(str), amostra_ementas['label_pred'].astype(str)))\n\n              precision    recall  f1-score   support\n\n           0       0.84      0.95      0.89        38\n           1       0.71      0.42      0.53        12\n\n    accuracy                           0.82        50\n   macro avg       0.78      0.68      0.71        50\nweighted avg       0.81      0.82      0.80        50"
  },
  {
    "objectID": "notebooks/llm_local.html",
    "href": "notebooks/llm_local.html",
    "title": "Importa pacotes",
    "section": "",
    "text": "import llm\nfrom sklearn.metrics import classification_report\nfrom tqdm import tqdm\ntqdm.pandas()\n\n\nExemplo básico\n\nllama = llm.get_model(\"llama3\")\n\n\n%%time\n\nresposta = llama.prompt(\n    \"\"\"\n    Classifique o texto abaixo. Responda apenas com a classe, sem explicações.\n\n    Texto: O Botafogo ganhou do PSG na Copa do Mundo.\n\n    Classes: Política, Esportes, Economia, Outros.\n    \"\"\"\n)\n\nprint(resposta)\n\nEsportes\nCPU times: user 69.1 ms, sys: 1.95 ms, total: 71.1 ms\nWall time: 13.4 s\n\n\n\n\nExemplo com dataset real\n\nfrom datasets import load_dataset\n\nementas = load_dataset(\"azmina/ementas_anotadas_inteiroteor\")\n\nementas_test = ementas['test'].to_pandas().sample(10,random_state=222)\n\n/home/abitporu/Documents/abraji/.venv/lib/python3.10/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n\n\n\ndef classificar_pl(model, texto):\n    prompt = f\"\"\"\n    Classifique se o PL é favorável ou contrário ao direito das mulheres. Responda apenas com 1 ou 0, sem explicações, de acordo com as definições:\n\n    1: significa que o PL é desfavorável ao direito das mulheres.\n    0: significa que o PL é favorável ao direito das mulheres.  \n\n    ---\n\n    Texto: {texto}\n\n    Classes: 1, 0\n    \"\"\"\n    \n    return str(model.prompt(prompt))   \n\nementas_test['label_pred'] = ementas_test['text'].progress_apply(lambda x: classificar_pl(llama,x))\n\n100%|██████████| 10/10 [00:52&lt;00:00,  5.22s/it]\n\n\n\nementas_test.head(2)\n\n\n\n\n\n\n\n\nid\ntext\nlabel_tema\nlabel_desfavoravel\nproponente_mulher\npartido\nurlInteiroTeor\ntextoInteiroTeor\nlabel_pred\n\n\n\n\n41\nPL 77/2021\nAltera a Lei nº 11.340, de 7 de agosto de 2006...\ndireitos sociais\n0\nM\nPSL\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\nCÂMARA DOS DEPUTADOS\\nGabinete do Deputado Ale...\n0\n\n\n1\nPDL 92/2023\nSusta os efeitos da Portaria nº 665, de 23 dem...\ngenero\n1\nM\nREPUBLICANOS\nhttps://www.camara.leg.br/proposicoesWeb/prop_...\nCÂMARA DOS DEPUTADOS\\nGabinete do Deputado Mes...\n1\n\n\n\n\n\n\n\n\nfrom sklearn.metrics import classification_report\nprint(classification_report(ementas_test['label_desfavoravel'].astype(int), ementas_test['label_pred'].astype(int)))\n\n              precision    recall  f1-score   support\n\n           0       0.88      0.88      0.88         8\n           1       0.50      0.50      0.50         2\n\n    accuracy                           0.80        10\n   macro avg       0.69      0.69      0.69        10\nweighted avg       0.80      0.80      0.80        10\n\n\n\n\n\nDeepseek\n\ndeepseek = llm.get_model(\"deepseek-r1\")\nresposta = classificar_pl(deepseek, \"Define que a Lei Maria da Penha só é aplicável para mulheres de baixa renda\")\n\nresposta\n\n'&lt;think&gt;\\nHmm, preciso analisar se este projeto de lei (PL) é favorável ou contrário ao direito das mulheres. O texto diz: \"Define que a Lei Maria da Penha só é aplicável para mulheres de baixa renda\". A Lei Maria da Penha foi criada no Brasil para combater a violência doméstica contra mulheres, protegendo-as com medidas como multas e prisão em caso de agressões.\\n\\nSe um PL limitar essa lei a apenas mulheres de baixa renda, isso seria discriminatório. O direito das mulheres deve ser universal, cobrindo todas as classes sociais sem exceções baseadas na condição econômica. Isso parece violar o princípio da igualdade e da não discriminação.\\n\\nA resposta precisa ser apenas 1 ou 0: \"1\" significa contrário ao direito das mulheres, \"0\" significa favorável. Nesse caso, limitar a aplicação da lei por renda é claramente prejudicial, pois exclui mulheres de outras classes que também podem sofrer violência.\\n\\nPortanto, o PL não está alinhado com os valores do direito universal das mulheres e deve ser classificado como contrário.\\n&lt;/think&gt;\\n1'\n\n\n\ndef extrair_categoria(texto):\n    separador = \"&lt;/think&gt;\"\n    resposta  = texto.split(separador)[1].strip()\n    return resposta\n\nextrair_categoria(resposta)\n\n'1'\n\n\n\n# %%time\n# def classificar_pl(model, texto):\n#     prompt = f\"\"\"\n#     Classifique se o PL é favorável ou contrário ao direito das mulheres. Responda apenas com 1 ou 0, sem explicações, de acordo com as definições:\n\n#     1: significa que o PL é desfavorável ao direito das mulheres.\n#     0: significa que o PL é favorável ao direito das mulheres.  \n\n#     ---\n\n#     Texto: {texto}\n\n#     Classes: 1, 0\n#     \"\"\"\n    \n#     resposta = str(model.prompt(prompt))\n    \n#     separador = \"&lt;/think&gt;\"\n#     resposta  = resposta.split(separador)[1].strip()\n    \n#     return resposta\n\nclassificar_pl(deepseek, \"Define que a Lei Maria da Penha só é aplicável para mulheres de baixa renda\")\n\n'&lt;think&gt;\\nHmm, preciso analisar se o texto classificado está relacionado com algo favorável ou desfavorável ao direito das mulheres. O usuário pediu apenas uma resposta binária (1 ou 0), sem explicações.\\n\\nO texto diz que a Lei Maria da Penha só seria aplicável para mulheres de baixa renda, caso isso acontecesse. Lembro que essa lei foi criada especificamente para combater violência doméstica contra mulheres, garantindo medidas como prisão temporária e responsabilização do agressor.\\n\\nSe uma proposta limitasse a Lei Maria da Penha apenas a mulheres de baixa renda, isso seria claramente prejudicial. Isoladamente, não teria direito igual para todos os cidadãos, afetando especialmente quem já sofre mais discriminação.\\n\\nO usuário parece estar testando meu entendimento sobre classificação binária de textos legais. Ele quer uma resposta rápida e objetiva sem rodeios. Talvez esteja automatizando análises com base em regras simples que eu codifiquei mentalmente anteriormente.\\n\\nVou precisar responder apenas 0 ou 1, sem qualquer explication. Como o texto descreve uma situação claramente prejudicial ao direito das mulheres, a resposta deve ser inequívoca.\\n&lt;/think&gt;\\n0'\n\n\n\nclassificar_pl(deepseek, \"Define que a Lei Maria da Penha só é aplicável para mulheres de baixa renda\")\n\n\n\nementas_test['label_pred'] = ementas_test['text'].progress_apply(lambda x: classificar_pl(deepseek,x))\n\n100%|██████████| 10/10 [14:29&lt;00:00, 86.94s/it] \n\n\n\nseparador = \"&lt;/think&gt;\"\n# separa a resposta\nementas_test[\"label_pred\"] = ementas_test.label_pred.str.split(separador).str[1].str.strip()\n# se não for nem 0 nem 1, vamos definir como 0\nementas_test[\"label_pred\"] = ementas_test[\"label_pred\"].apply(lambda x: 0 if x not in [0, 1] else x)\n\n\n\nprint(classification_report(ementas_test['label_desfavoravel'].astype(int), ementas_test['label_pred'].astype(int)))\n\n\n              precision    recall  f1-score   support\n\n           0       0.80      1.00      0.89         8\n           1       0.00      0.00      0.00         2\n\n    accuracy                           0.80        10\n   macro avg       0.40      0.50      0.44        10\nweighted avg       0.64      0.80      0.71        10\n\n\n\n/home/abitporu/Documents/abraji/.venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1706: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", result.shape[0])\n/home/abitporu/Documents/abraji/.venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1706: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", result.shape[0])\n/home/abitporu/Documents/abraji/.venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1706: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", result.shape[0])"
  },
  {
    "objectID": "slides.html#duas-visões",
    "href": "slides.html#duas-visões",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Duas visões",
    "text": "Duas visões\n\n\nO que nos vendem…\n\nGrandes\nProprietários\nConhecimento genérico\nServiços\nNa “nuvem”\nSoluções tamanho “único”\n\n\nO que (também) queremos…\n\nPequenos\nCódigo-aberto\nConhecimento específico\nFerramentas\nAuto-hospedados\nSoluções customizadas"
  },
  {
    "objectID": "slides.html#classificação-de-texto-ontem-e-hoje",
    "href": "slides.html#classificação-de-texto-ontem-e-hoje",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Classificação de texto ontem e hoje",
    "text": "Classificação de texto ontem e hoje\nNLP à moda antiga\n\nMuito pré-processamento do texto de entrada (stemming, lematização, etc).\nRepresentação das palavras com vetores esparsos via métodos “bag of words” baseados nas frequências de palavras (exemplo: TF-IDF).\nTreina um modelo específico do zero com exemplos próprios.\nComputacionalmente barato, ainda é usado até hoje em determinadas situações."
  },
  {
    "objectID": "slides.html#tokens",
    "href": "slides.html#tokens",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Tokens",
    "text": "Tokens\nTokens são as unidades mínimas usadas para representar texto.\nÉ usado para calcular o custo de serviços via API."
  },
  {
    "objectID": "slides.html#embeddings",
    "href": "slides.html#embeddings",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Embeddings",
    "text": "Embeddings\nCada token é representado por embeddings, sequências numéricas que refletem características semânticas. O resultado é que elementos numericamente próximos têm semântica semelhante.\nA representação final do input é construída a partir das relações que os embeddings utilizados estabelecem entre si.\n🔗 WSJ sobre tweets do Musk"
  },
  {
    "objectID": "slides.html#linguística-distribucional",
    "href": "slides.html#linguística-distribucional",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Linguística distribucional",
    "text": "Linguística distribucional\n\n“O significado de uma palavra é seu uso na linguagem.” (Wittgenstein)\n\n\n“Você conhecerá uma palavra pela companhia que ela mantém.” (J. R. Firth)"
  },
  {
    "objectID": "slides.html#modelos-transformer-o-t-do-chatgpt",
    "href": "slides.html#modelos-transformer-o-t-do-chatgpt",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Modelos Transformer (o T do ChatGPT)",
    "text": "Modelos Transformer (o T do ChatGPT)\nLove Attention is all you need, 2017.\n\nDeu origem a duas grandes famílias de modelo: BERT e GPT."
  },
  {
    "objectID": "slides.html#a-árvore-genealógica",
    "href": "slides.html#a-árvore-genealógica",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "A árvore genealógica",
    "text": "A árvore genealógica"
  },
  {
    "objectID": "slides.html#inferência-zero-shot",
    "href": "slides.html#inferência-zero-shot",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Inferência zero-shot",
    "text": "Inferência zero-shot\nUso de um modelo pré-treinado sem o provimento de exemplos.\n\nBART-LARGE\nModelos GPT com instruções simples, input e classes apenas."
  },
  {
    "objectID": "slides.html#few-shot",
    "href": "slides.html#few-shot",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Few-shot",
    "text": "Few-shot\nUso de um modelo pré-treinado provendo alguns exemplos “anotados”.\n\nSetFit\nModelos GPT: inclusão de exemplos no prompt. LLMs podem te ajudar a melhor o prompt."
  },
  {
    "objectID": "slides.html#ajuste-fino-fine-tuning",
    "href": "slides.html#ajuste-fino-fine-tuning",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Ajuste fino (fine-tuning)",
    "text": "Ajuste fino (fine-tuning)\nAltera o modelo para torná-lo mais especializado com base em um conjunto razoável de dados anotados (anotação correlacionada com desempenho)."
  },
  {
    "objectID": "slides.html#outros-modos-de-usar",
    "href": "slides.html#outros-modos-de-usar",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Outros modos de usar",
    "text": "Outros modos de usar\nRAGs: usa uma coleção de documentos para “embasar” as respostas do modelo.\nKnowledge distillation: transferir conhecimento de um modelo grande para um modelo pequeno.\nEnsembling: combinar predições de múltiplos modelos."
  },
  {
    "objectID": "slides.html#hugging-face",
    "href": "slides.html#hugging-face",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Hugging Face",
    "text": "Hugging Face\nO Hugging Face está para os desenvolvedores de IA assim como o GitHub está para os desenvolvedores de software.\nhttps://huggingface.co/"
  },
  {
    "objectID": "slides.html#estratégias-para-avaliação",
    "href": "slides.html#estratégias-para-avaliação",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Estratégias para avaliação",
    "text": "Estratégias para avaliação\n\nDefina uma linha base de avaliação (trabalhos prévios, ChatGPT, etc)\nUse estatísticas de concordâncias, como coeficiente Kappa, para avaliar o grau de concordância de anotações coletivas.\nGaranta a qualidade dos dados usados para avaliação do modelo."
  },
  {
    "objectID": "slides.html#avaliação",
    "href": "slides.html#avaliação",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Avaliação",
    "text": "Avaliação\n\nRecall: entre os casos realmente positivos, quantos foram acertados. Ideal quando falsos negativos são críticos ou quando a classificação será revisada/validada por pessoas.\nPrecisão: entre os casos que o modelo classificou como positivos, quantos estavam corretos. Importante para priorizar que as classificações feitas sejam confiáveis.\nF1 score: um tipo de média entre as anteriores, bom para mensurar a qualidade geral.\n\n🔗 Tutorial do Google"
  },
  {
    "objectID": "slides.html#modelos-bert-em-português",
    "href": "slides.html#modelos-bert-em-português",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Modelos BERT em português",
    "text": "Modelos BERT em português\n\nBERTimbau: “antigo” (2020), mas eficiente e ainda amplamente utilizado para fine-tuning de modelos em português.\nAlbertina: modelos específicos para português de Portugal e do Brasil.\nCongretimbau: BERTimbau com pré-treinamento continuado para ementas de projetos de lei (Câmara e Senado)."
  },
  {
    "objectID": "slides.html#outros-modelos-bert",
    "href": "slides.html#outros-modelos-bert",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Outros modelos BERT",
    "text": "Outros modelos BERT\n\nLegalBERT: especializado em textos legais.\nDeBERTina: arquitetura com melhorias em relação ao modelo BERT tradicional.\nModernBERT: arquitetura mais moderna, porém treinado apenas em inglês."
  },
  {
    "objectID": "slides.html#zero-shot",
    "href": "slides.html#zero-shot",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Zero shot",
    "text": "Zero shot\nZero shot com modelos BERT\nZero shot com modelos generativos localmente\nZero shot com modelos generativos via API"
  },
  {
    "objectID": "slides.html#few-shot-1",
    "href": "slides.html#few-shot-1",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Few shot",
    "text": "Few shot"
  },
  {
    "objectID": "slides.html#fine-tuning",
    "href": "slides.html#fine-tuning",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Fine-tuning",
    "text": "Fine-tuning\nFine-tuning: Classificação de risco aos direitos das mulheres com base em PLs"
  },
  {
    "objectID": "slides.html#fine-tuning-1",
    "href": "slides.html#fine-tuning-1",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Fine-tuning",
    "text": "Fine-tuning\nFogo Cruzado: Detecção de relatos de violência armada em tempo real - paper e repositório no Github"
  },
  {
    "objectID": "slides.html#smart-image-sorter",
    "href": "slides.html#smart-image-sorter",
    "title": "Classificação de texto/imagens com IA de código aberto",
    "section": "Smart Image Sorter",
    "text": "Smart Image Sorter\n\nNotebooks com interface gráfica ou script Python\nClassificação zero-shot de coleções de imagens\n🔗 Guia traduzido para português\n🔗 GitHub\n🔗 Tutorial Bellingcat"
  }
]